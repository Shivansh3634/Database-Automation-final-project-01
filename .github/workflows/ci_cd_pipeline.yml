name: CI/CD - MySQL ClimateData Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  db-pipeline:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: rootpass123
          MYSQL_DATABASE: project_db
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -prootpass123 --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install MySQL client & Python
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-client python3-pip
          echo "MySQL client and Python installed."

      - name: Wait for MySQL readiness
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -prootpass123 --silent; then
              echo "MySQL is up."
              break
            fi
            echo "Waiting for MySQL..."
            sleep 2
          done

      # 1) Initial Schema Deployment
      - name: Create table
        run: |
          mysql -h 127.0.0.1 -uroot -prootpass123 project_db < sql/create_table_01.sql

      # 2) Schema Update
      - name: Add humidity column
        run: |
          mysql -h 127.0.0.1 -uroot -prootpass123 project_db < sql/alter_add_humidity_02.sql

      # 3) Data Seeding
      - name: Seed sample data
        run: |
          mysql -h 127.0.0.1 -uroot -prootpass123 project_db < sql/seed_data_03.sql

      # 4) Concurrent Query Execution (Python)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.11'

      - name: Install Python dependencies
        run: pip install mysql-connector-python

      - name: Run concurrent workload
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: rootpass123
          DB_NAME: project_db
        run: python scripts/multi_thread_queries.py

      # 5) Validation
      - name: Validation queries
        run: |
          mkdir -p artifacts
          mysql -h 127.0.0.1 -uroot -prootpass123 project_db < sql/validate_04.sql | tee artifacts/validation_output.txt
          echo "SHOW CREATE TABLE project_db.ClimateData\G" | mysql -h 127.0.0.1 -uroot -prootpass123 project_db | tee -a artifacts/validation_output.txt

      - name: Upload artifacts (logs & validation)
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-artifacts
          path: artifacts/
